/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eu.monoxial.password_manager;

import java.time.format.DateTimeFormatter;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author monoxial
 */
public class JDialog_DateExpiration extends javax.swing.JDialog {

    /**
     * Creates new form JDialog_DateExpiration
     */
    JDialog_DateExpiration(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane_listeIdentifiantExpi = new javax.swing.JScrollPane();
        jList_idDateExpi = new javax.swing.JList<>();
        jLabel_infoIdentifiantExpirant = new javax.swing.JLabel();
        datePicker_choixDateExpi = new com.github.lgooddatepicker.components.DatePicker();
        jButton_afficherDateExpi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane_listeIdentifiantExpi.setViewportView(jList_idDateExpi);

        jLabel_infoIdentifiantExpirant.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_infoIdentifiantExpirant.setText("Afficher les identifiants expirants avant le:");

        jButton_afficherDateExpi.setText("Actualiser");
        jButton_afficherDateExpi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_afficherDateExpiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane_listeIdentifiantExpi, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel_infoIdentifiantExpirant, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(datePicker_choixDateExpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton_afficherDateExpi)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_infoIdentifiantExpirant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datePicker_choixDateExpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_afficherDateExpi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane_listeIdentifiantExpi, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_afficherDateExpiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_afficherDateExpiActionPerformed
        if (datePicker_choixDateExpi.getDate() != null) { //Vérifie qu'une date a été sélectionné
            var model_dateExpi = new DefaultListModel<String>();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/YYYY"); //Formatte la date dans le format fr

            for (int i = 0; i < coffre.getListeElement().size(); i++) {
                if (coffre.getElement(i).getExpi().isBefore(datePicker_choixDateExpi.getDate())) {
                    model_dateExpi.add(i, coffre.getElement(i).getNom() + " - " + coffre.getElement(i).getExpi().format(formatter));
                }
            }
            jList_idDateExpi.setModel(model_dateExpi);
        } else {
            JOptionPane.showMessageDialog(this, "Aucune date sélectionné", "", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton_afficherDateExpiActionPerformed

    void showDialog(Coffre _coffre) {
        coffre = _coffre;
        setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                JDialog_DateExpiration dialog = new JDialog_DateExpiration(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker datePicker_choixDateExpi;
    private javax.swing.JButton jButton_afficherDateExpi;
    private javax.swing.JLabel jLabel_infoIdentifiantExpirant;
    private javax.swing.JList<String> jList_idDateExpi;
    private javax.swing.JScrollPane jScrollPane_listeIdentifiantExpi;
    // End of variables declaration//GEN-END:variables
    private Coffre coffre = new Coffre(null);
}
